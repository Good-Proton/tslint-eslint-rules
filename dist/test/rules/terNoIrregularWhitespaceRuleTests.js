"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ruleTester_1 = require("./ruleTester");
var ruleTester = new ruleTester_1.RuleTester('ter-no-irregular-whitespace');
function expecting(errors) {
    return errors.map(function (err) {
        return {
            failure: 'irregular whitespace not allowed',
            startPosition: new ruleTester_1.Position(err[0], err[1]),
            endPosition: new ruleTester_1.Position()
        };
    });
}
ruleTester.addTestGroup('valid', 'should pass when not using irregular whitespaces', [
    '"\\u000B";',
    '"\\u000C";',
    '"\\u0085";',
    '"\\u00A0"',
    '"\\u180E";',
    '"\\ufeff";',
    '"\\u2000";',
    '"\\u2001";',
    '"\\u2002";',
    '"\\u2003";',
    '"\\u2004";',
    '"\\u2005";',
    '"\\u2006";',
    '"\\u2007";',
    '"\\u2008";',
    '"\\u2009";',
    '"\\u200A";',
    '"\\u200B";',
    '"\\u2028";',
    '"\\u2029";',
    '"\\u202F";',
    '"\\u205f";',
    '"\\u3000";',
    '"\u000B";',
    '"\u000C";',
    '"\u0085";',
    '"\u00A0"',
    '"\u180E";',
    '"\ufeff";',
    '"\u2000";',
    '"\u2001";',
    '"\u2002";',
    '"\u2003";',
    '"\u2004";',
    '"\u2005";',
    '"\u2006";',
    '"\u2007";',
    '"\u2008";',
    '"\u2009";',
    '"\u200A";',
    '"\u200B";',
    '"\\\u2028";',
    '"\\\u2029";',
    '"\u202F";',
    '"\u205f";',
    '"\u3000";'
]);
ruleTester.addTestGroup('invalid', 'should fail when using irregular whitespaces', [
    { code: 'var foo \u000B = "thing";', errors: expecting([[0, 8]]) },
    { code: 'var foo \u000C = "thing";', errors: expecting([[0, 8]]) },
    { code: 'var foo \u00A0 = "thing";', errors: expecting([[0, 8]]) },
    { code: 'var foo \u180E = "thing";', errors: expecting([[0, 8]]) },
    { code: 'var foo \ufeff = "thing";', errors: expecting([[0, 8]]) },
    { code: 'var foo \u2000 = "thing";', errors: expecting([[0, 8]]) },
    { code: 'var foo \u2001 = "thing";', errors: expecting([[0, 8]]) },
    { code: 'var foo \u2002 = "thing";', errors: expecting([[0, 8]]) },
    { code: 'var foo \u2003 = "thing";', errors: expecting([[0, 8]]) },
    { code: 'var foo \u2004 = "thing";', errors: expecting([[0, 8]]) },
    { code: 'var foo \u2005 = "thing";', errors: expecting([[0, 8]]) },
    { code: 'var foo \u2006 = "thing";', errors: expecting([[0, 8]]) },
    { code: 'var foo \u2007 = "thing";', errors: expecting([[0, 8]]) },
    { code: 'var foo \u2008 = "thing";', errors: expecting([[0, 8]]) },
    { code: 'var foo \u2009 = "thing";', errors: expecting([[0, 8]]) },
    { code: 'var foo \u200A = "thing";', errors: expecting([[0, 8]]) },
    { code: 'var foo \u2028 = "thing";', errors: expecting([[0, 8]]) },
    { code: 'var foo \u2029 = "thing";', errors: expecting([[0, 8]]) },
    { code: 'var foo \u202F = "thing";', errors: expecting([[0, 8]]) },
    { code: 'var foo \u205f = "thing";', errors: expecting([[0, 8]]) },
    { code: 'var foo \u3000 = "thing";', errors: expecting([[0, 8]]) },
    {
        code: 'var a = "b",\u2028c = "d",\ne = "f"\u2028',
        errors: expecting([[0, 12], [1, 7]])
    },
    {
        code: 'var foo \u3000 = "thing", other \u3000 = "thing";\nvar third \u3000 = "thing";',
        errors: expecting([[0, 8], [0, 27], [1, 10]])
    }
]);
ruleTester.runTests();

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvcnVsZXMvdGVyTm9JcnJlZ3VsYXJXaGl0ZXNwYWNlUnVsZVRlc3RzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsMkNBQTZEO0FBRTdELElBQU0sVUFBVSxHQUFHLElBQUksdUJBQVUsQ0FBQyw2QkFBNkIsQ0FBQyxDQUFDO0FBR2pFLFNBQVMsU0FBUyxDQUFDLE1BQTBCO0lBQzNDLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxVQUFDLEdBQUc7UUFDcEIsT0FBTztZQUNMLE9BQU8sRUFBRSxrQ0FBa0M7WUFDM0MsYUFBYSxFQUFFLElBQUkscUJBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzNDLFdBQVcsRUFBRSxJQUFJLHFCQUFRLEVBQUU7U0FDNUIsQ0FBQztJQUNKLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQztBQUVELFVBQVUsQ0FBQyxZQUFZLENBQUMsT0FBTyxFQUFFLGtEQUFrRCxFQUFFO0lBQ25GLFlBQVk7SUFDWixZQUFZO0lBQ1osWUFBWTtJQUNaLFdBQVc7SUFDWCxZQUFZO0lBQ1osWUFBWTtJQUNaLFlBQVk7SUFDWixZQUFZO0lBQ1osWUFBWTtJQUNaLFlBQVk7SUFDWixZQUFZO0lBQ1osWUFBWTtJQUNaLFlBQVk7SUFDWixZQUFZO0lBQ1osWUFBWTtJQUNaLFlBQVk7SUFDWixZQUFZO0lBQ1osWUFBWTtJQUNaLFlBQVk7SUFDWixZQUFZO0lBQ1osWUFBWTtJQUNaLFlBQVk7SUFDWixZQUFZO0lBQ1osV0FBVztJQUNYLFdBQVc7SUFDWCxXQUFXO0lBQ1gsVUFBVTtJQUNWLFdBQVc7SUFDWCxXQUFXO0lBQ1gsV0FBVztJQUNYLFdBQVc7SUFDWCxXQUFXO0lBQ1gsV0FBVztJQUNYLFdBQVc7SUFDWCxXQUFXO0lBQ1gsV0FBVztJQUNYLFdBQVc7SUFDWCxXQUFXO0lBQ1gsV0FBVztJQUNYLFdBQVc7SUFDWCxXQUFXO0lBQ1gsYUFBYTtJQUNiLGFBQWE7SUFDYixXQUFXO0lBQ1gsV0FBVztJQUNYLFdBQVc7Q0FDWixDQUFDLENBQUM7QUFFSCxVQUFVLENBQUMsWUFBWSxDQUFDLFNBQVMsRUFBRSw4Q0FBOEMsRUFBRTtJQUNqRixFQUFFLElBQUksRUFBRSwyQkFBMkIsRUFBRSxNQUFNLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0lBQ2xFLEVBQUUsSUFBSSxFQUFFLDJCQUEyQixFQUFFLE1BQU0sRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7SUFDbEUsRUFBRSxJQUFJLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtJQUNsRSxFQUFFLElBQUksRUFBRSwyQkFBMkIsRUFBRSxNQUFNLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0lBQ2xFLEVBQUUsSUFBSSxFQUFFLDJCQUEyQixFQUFFLE1BQU0sRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7SUFDbEUsRUFBRSxJQUFJLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtJQUNsRSxFQUFFLElBQUksRUFBRSwyQkFBMkIsRUFBRSxNQUFNLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0lBQ2xFLEVBQUUsSUFBSSxFQUFFLDJCQUEyQixFQUFFLE1BQU0sRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7SUFDbEUsRUFBRSxJQUFJLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtJQUNsRSxFQUFFLElBQUksRUFBRSwyQkFBMkIsRUFBRSxNQUFNLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0lBQ2xFLEVBQUUsSUFBSSxFQUFFLDJCQUEyQixFQUFFLE1BQU0sRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7SUFDbEUsRUFBRSxJQUFJLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtJQUNsRSxFQUFFLElBQUksRUFBRSwyQkFBMkIsRUFBRSxNQUFNLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0lBQ2xFLEVBQUUsSUFBSSxFQUFFLDJCQUEyQixFQUFFLE1BQU0sRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7SUFDbEUsRUFBRSxJQUFJLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtJQUNsRSxFQUFFLElBQUksRUFBRSwyQkFBMkIsRUFBRSxNQUFNLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0lBQ2xFLEVBQUUsSUFBSSxFQUFFLDJCQUEyQixFQUFFLE1BQU0sRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7SUFDbEUsRUFBRSxJQUFJLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtJQUNsRSxFQUFFLElBQUksRUFBRSwyQkFBMkIsRUFBRSxNQUFNLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0lBQ2xFLEVBQUUsSUFBSSxFQUFFLDJCQUEyQixFQUFFLE1BQU0sRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7SUFDbEUsRUFBRSxJQUFJLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtJQUNsRTtRQUNFLElBQUksRUFBRSwyQ0FBMkM7UUFDakQsTUFBTSxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDckM7SUFDRDtRQUNFLElBQUksRUFBRSxnRkFBZ0Y7UUFDdEYsTUFBTSxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7S0FDOUM7Q0FDRixDQUFDLENBQUM7QUFFSCxVQUFVLENBQUMsUUFBUSxFQUFFLENBQUMiLCJmaWxlIjoidGVzdC9ydWxlcy90ZXJOb0lycmVndWxhcldoaXRlc3BhY2VSdWxlVGVzdHMuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Z5YWNoZXNsYXZkb3J6aGlldi9EZXNrdG9wL3Byb2plY3RzL0BsaW5rZWQtaGVscGVyL3RzbGludC1lc2xpbnQtcnVsZXMvc3JjIn0=
